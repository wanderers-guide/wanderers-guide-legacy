{{#section 'styles'}}
    <link rel="stylesheet" href="/css/docs-styles.css">
{{/section}}

{{#section 'header'}}
    <script src="/js/wsc/docs-page.js"></script>
    <script src="/js/wsc/text-processing.js"></script>
{{/section}}

{{#section 'nav_home'}}
    <li><a href="/">Home</a></li>
{{/section}}

{{#section 'nav_characters'}}
    <li class="mx-lg-4 mx-md-3 my-md-0 my-2"><a href="/v/profile/characters">Characters</a></li>
{{/section}}

{{#section 'nav_builds'}}
    <li><a href="/builds">Builds</a></li>
{{/section}}

{{#section 'nav_homebrew'}}
    <li class="mx-lg-4 mx-md-3 my-md-0 my-2"><a href="/homebrew">Homebrew</a></li>
{{/section}}

{{#section 'nav_gm_tools'}}
    <li><a href="/gm-tools">GM Tools</a></li>
{{/section}}

{{#section 'nav_browse'}}
    <li class="mx-lg-4 mx-md-3 my-md-0 my-2"><a href="/browse"><i class="fas fa-lg fa-search"></i></a></li>
{{/section}}

{{#section 'nav_login'}}
    <li class="mr-4"><a href="/auth/login">Login <i class="fas fa-sign-in-alt"></i></a></li>
{{/section}}



{{#section 'banner_nav'}}
    <div class="banner_w3lspvt-2"></div>
{{/section}}


<div id="doc_nav_shell">
    <div id="docs_nav" class="pl-2 pt-2">
        <aside class="menu use-custom-scrollbar is-darker">
            <p class="menu-label">
                <a href="/wsc_docs/#wsc_docs">WSC Documentation</a>
            </p>
            <ul class="menu-list">
                <li><a href="/wsc_docs/#usage">Usage</a></li>
            </ul>
            <p class="menu-label">
                <a href="/wsc_docs/#description_fields">Description Fields</a>
            </p>
            <ul class="menu-list">
                <li><a href="/wsc_docs/#actions">Actions</a></li>
                <li><a href="/wsc_docs/#indexing">Indexing</a></li>
                <li><a href="/wsc_docs/#links">Links</a></li>
                <li><a href="/wsc_docs/#lists">Lists</a></li>
                <li><a href="/wsc_docs/#tables">Tables</a></li>
                <li><a href="/wsc_docs/#tiers_of_success">Tiers of Success</a></li>
                <li><a href="/wsc_docs/#tooltips">Tooltips</a></li>
                <li><a href="/wsc_docs/#typography">Typography</a></li>
            </ul>
            <p class="menu-label">
                <a href="/wsc_docs/#code_basics">Code Fields</a>
            </p>
            <ul class="menu-list">
                <li class=""><a href="/wsc_docs/#code_basics">Basics</a></li>
                <li class=""><a href="/wsc_docs/#code_if_else">If - Else</a></li>
                <li class=""><a href="/wsc_docs/#code_builder_statements">Builder Statements</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_boosts">- Boosts</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_feats">- Feats</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_languages">- Languages</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_proficiencies">- Proficiencies</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_skills">- Skills / Lore</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_spells">- Spells</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_resist_and_weak">- Resist / Weaks</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_specializations">- Specializations</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_builder_miscellaneous">- Miscellaneous</a></li>
                <li class=""><a href="/wsc_docs/#code_sheet_statements">Sheet Statements</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_conditions">- Conditions</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_item_defaults">- Item Defaults</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_stat_adjustments">- Stat Adjustments</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_sheet_miscellaneous">- Miscellaneous</a></li>
                <li class=""><a href="/wsc_docs/#code_universal_statements">Universal Statements</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_add_text">- Add Text</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_misc_feats">- Misc. Feat</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_notes_field">- Notes Field</a></li>
                <li class="pl-2"><a href="/wsc_docs/#code_variables">- Variables</a></li>
                <li class=""><a href="/wsc_docs/#code_removal_statements">Removal Statements</a></li>
            </ul>
        </aside>
    </div>
</div>

<div id="docs_content" class="tile is-ancestor is-paddingless is-marginless mb-3">
    <div class="tile is-parent is-2">
        <div class="tile is-child"></div>
    </div>
    <div class="tile is-parent is-vertical is-8">
        <div id="wsc_docs" class="tile is-child">
            <h1 class="main-title is-size-2 is-family-code has-text-centered">WSC Documentation</h1>
            <p class="subtitle is-size-6-5 has-txt-listing has-text-centered is-italic">Wanderer's Styling Code (WSC) is used to format text in Wanderer's Guide and implement features for homebrew content.</p>
        </div>
        <div id="usage" class="tile is-child isHideable">
            <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Usage</h1>
            <p>
              Wanderer's Styling Code has two different forms, one is for description fields and the other is for code fields. Each form is split into its own section and categorized by their sub-functionalities, as shown on the left sidebar.
            </p>
            <p class="pt-3">
              Description and code fields that can have WSC input in them will always have a blue book icon next to them; if a text field doesn't have that icon, it's safe to assume WSC will not function in that area.
            </p>
            <div class="info-block">
              <p><i class="fas fa-info-circle"></i>
                Need help? We have a homebrew-help channel on our <a class="has-text-info" href="https://discord.gg/kxCpa6G" target="_blank">Discord server</a>! Feel free to ask for help if you're ever stuck!
              </p>
            </div>
        </div>
        <div id="description_fields" class="tile is-child is-paddingless">
            <div class="isHideable">
                <h1 class="main-title is-family-code is-size-3 has-text-centered is-marginless mb-2">Description Fields</h1>
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Basics</h1>
                <p>
                    This is where the styling part of WSC comes into play. The following is numberous, relatively small, styling rules you can apply to your text.
                </p>
            </div>
            <div id="typography" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Typography</h1>
                <div class="ml-4">
                    <div class="columns mb-3">
                        <div class="column is-6">
                            <div class="columns is-mobile is-marginless">
                                <div class="column is-paddingless"><strong class="pl-2">You Type:</strong></div>
                                <div class="column is-paddingless"><strong class="pl-3">You See:</strong></div>
                            </div>
                            <div class="columns table-row-a is-mobile is-marginless">
                                <div class="column"><p>__italics__</p></div>
                                <div class="column text-processing">__italics__</div>
                            </div>
                            <div class="columns table-row-b is-mobile is-marginless">
                                <div class="column is-mobile"><p>**bold**</p></div>
                                <div class="column text-processing">**bold**</div>
                            </div>
                            <div class="columns table-row-a is-mobile is-marginless">
                                <div class="column is-mobile"><p>***big bold***</p></div>
                                <div class="column text-processing">***big bold***</div>
                            </div>
                            <div class="columns table-row-b is-mobile is-marginless">
                                <div class="column"><p>~~strikethrough~~</p></div>
                                <div class="column text-processing">~~strikethrough~~</div>
                            </div>
                            <div class="columns table-row-a is-mobile is-marginless">
                                <div class="column"><p>^^superscript^^</p></div>
                                <div class="column text-processing">^^superscript^^</div>
                            </div>
                            <div class="columns table-row-b is-mobile is-marginless">
                                <div class="column"><p>:> pushed text that wraps</p></div>
                                <div class="column text-processing">:> pushed text that wraps</div>
                            </div>
                            <div class="columns table-row-a is-mobile is-marginless">
                                <div class="column is-mobile"><p>----</p></div>
                                <div class="column text-processing">&#10;----</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="links" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Links</h1>
                <div class="ml-4">
                    <div class="mt-2">
                        <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Core Rulebook</h1>
                        <p>
                            The word "page" followed by a number will automatically generate a link to where you can purchase the Pathfinder 2e Core Rulebook.
                        </p>
                        <div class="code-block">
                          <p class="pl-2">This is forced movement (see page 475 for more details).</p>
                        </div>
                        <p class="pl-4 is-italic">Becomes...</p>
                        <div class="code-block">
                          <div class="text-processing">This is forced movement (see page 475 for more details).</div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Bestiary</h1>
                        <p>
                            The words "Bestiary pg." followed by a number will automatically generate a link to where you can purchase the Pathfinder 2e Bestiary.
                        </p>
                        <div class="code-block">
                          <p class="pl-2">For more info on riding horses see Bestiary pg. 209!</p>
                        </div>
                        <p class="pl-4 is-italic">Becomes...</p>
                        <div class="code-block">
                          <div class="text-processing">For more info on riding horses see Bestiary pg. 209!</div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">External</h1>
                        <p>
                            URLs to popular community resources can be turned into icons that function as links, just place the URL in-between two brackets. The following domain names apply:
                        </p>
                        <p class="is-size-7 pb-2 pl-4">
                            'paizo.com', '2e.aonprd.com', 'pf2.easytool.es', 'pathfinder2.dragonlash.com', 'pf2srd.com', 'pf2.d20pfsrd.com', 'youtube.com'
                        </p>
                        <div class="code-block">
                          <p class="pl-2">An example of an external icon-link can be seen here [https://paizo.com/pathfinder]!</p>
                        </div>
                        <p class="pl-4 is-italic">Becomes...</p>
                        <div class="code-block">
                          <div class="text-processing">An example of an external icon-link can be seen here [https://paizo.com/pathfinder]!</div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="indexing" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Indexing</h1>
                <div class="ml-4">
                    <div class="mt-2">
                        <p>
                            You can index an action, feat, item, language, spell, or trait within text. Conditions are also automatically indexed. Indexing won't work properly on this page like it does in the character builder or sheet, but the system will still know that text is attempting to be indexed and will underline the text in yellow.
                        </p>
                        <div class="info-block">
                          <p><i class="fas fa-info-circle"></i>
                            On the character builder or sheet, any text that's been indexed will appear blue and can be clicked on to view the indexed content. If content of the indexed name is not found, it will be replaced with red text saying the indexed content was not found.
                          </p>
                        </div>
                        <div class="code-block mt-4">
                          <p class="pl-2">Make a (action: Strike) with a (item: dwarven waraxe).</p>
                        </div>
                        <p class="pl-4 is-italic">Becomes...</p>
                        <div class="code-block">
                          <div class="text-processing">Make a (action: Strike) with a (item: dwarven waraxe).</div>
                        </div>
                        <p class="mt-4">
                          You can also index different words as something, this can be particularly useful with different verb tenses for activities. The below example will index 'Sustaining the Spell' as 'Sustain a Spell' but will still display it the same.
                        </p>
                        <div class="code-block">
                          <p class="pl-2">You can command your undead (trait: minion) for as long as you continue (action: Sustaining the Spell | Sustain a Spell).</p>
                        </div>
                        <p class="pl-4 is-italic">Becomes...</p>
                        <div class="code-block">
                          <div class="text-processing">You can command your undead (trait: minion) for as long as you continue (action: Sustaining the Spell | Sustain a Spell).</div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="actions" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Actions</h1>
                <p>
                    Displaying action icons is super easy. Just write the action codename and it will generate the appropriate action icon.
                </p>
                <div class="code-block">
                    <p class="pl-2">
                    Free Action: FREE-ACTION.
                    </p>
                    <p class="pl-2">
                    Reaction: REACTION.
                    </p>
                    <p class="pl-2">
                    One Action: ONE-ACTION.
                    </p>
                    <p class="pl-2">
                    Two Actions: TWO-ACTIONS.
                    </p>
                    <p class="pl-2">
                    Three Actions: THREE-ACTIONS.
                    </p>
                </div>
                <p class="pl-4 is-italic">Becomes...</p>
                <div class="code-block">
                    <div class="text-processing">
                        Free Action: FREE-ACTION.
                    </div>
                    <div class="text-processing">
                        Reaction: REACTION.
                    </div>
                    <div class="text-processing">
                        One Action: ONE-ACTION.
                    </div>
                    <div class="text-processing">
                        Two Actions: TWO-ACTIONS.
                    </div>
                    <div class="text-processing">
                        Three Actions: THREE-ACTIONS.
                    </div>
                </div>
            </div>
            <div id="tables" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Tables</h1>
                <p>
                    Occasionally you might need to organize information in the form of a table. Here are some examples on how to do that.
                </p>
                <div class="code-block">
                    <p class="pl-2">
                      Questions|Answers<span class="is-pulled-right">// The table headings</span>
                    </p>
                    <p class="pl-2">
                      :--|:--<span class="is-pulled-right">// The cell alignments</span>
                    </p>
                    <p class="pl-2">
                      What is your favorite color?|Orange.<span class="is-pulled-right">// A row</span>
                    </p>
                    <p class="pl-2">
                      Cats or dogs?|Foxes.<span class="is-pulled-right">// Another row</span>
                    </p>
                </div>
                <p class="pl-4 is-italic">Would be...</p>
                <div class="code-block text-processing">
                    Questions|Answers
                    :--|:--
                    What is your favorite color?|Orange.
                    Cats or dogs?|Foxes.
                </div>
                <div class="info-block">
                  <p><i class="fas fa-info-circle"></i>
                    You can add as many rows and columns as you need! Just keep in mind, you need to have the same number of columns for each line and the 2nd line must be for setting cell alignments.
                  </p>
                </div>

                <hr class="m-3">
                <h1 class="small-title is-size-4 is-marginless mt-2 mb-1 pl-3">Cell Alignments</h1>
                <div class="code-block text-processing">
                    Symbol|Meaning
                    :-:|:--
                    :--|Align to the left
                    :-:|Center
                    --:|Align to the right
                </div>

            </div>
            <div id="tiers_of_success" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Tiers of Success</h1>
                <p>
                    Here's some easy formatting for tiers of success. Just use a colon after the word(s) of the tier.
                </p>
                <div class="code-block">
                    <p class="pl-2">
                      To the target, your words are honey and your visage seems bathed in a dreamy haze. It must attempt a Will save, with a +4 circumstance bonus if you or your allies recently threatened it or used hostile actions against it.
                    </p>
                    <p class="pl-2">
                        Critical Success: The target is unaffected and aware you tried to charm it.
                    </p>
                    <p class="pl-2">
                        Success: The target is unaffected but thinks your spell was something harmless instead of charm, unless it identifies the spell (Identifying Spells section on page 305).
                    </p>
                    <p class="pl-2">
                        Failure: The target’s attitude becomes friendly toward you. If it was friendly, it becomes helpful. It can’t use hostile actions against you.
                    </p>
                    <p class="pl-2">
                        Critical Failure: The target’s attitude becomes helpful toward you, and it can’t use hostile actions against you.
                    </p>
                </div>
                <p class="pl-4 is-italic">Becomes...</p>
                <div class="code-block text-processing">
                    To the target, your words are honey and your visage seems bathed in a dreamy haze. It must attempt a Will save, with a +4 circumstance bonus if you or your allies recently threatened it or used hostile actions against it.
                    Critical Success: The target is unaffected and aware you tried to charm it.
                    Success: The target is unaffected but thinks your spell was something harmless instead of charm, unless it identifies the spell (Identifying Spells section on page 305).
                    Failure: The target’s attitude becomes friendly toward you. If it was friendly, it becomes helpful. It can’t use hostile actions against you.
                    Critical Failure: The target’s attitude becomes helpful toward you, and it can’t use hostile actions against you.
                </div>
                <div class="info-block">
                  <p><i class="fas fa-info-circle"></i>
                    You also don't need to include all four tiers of success! The system will format whatever tiers you give it.
                  </p>
                </div>
            </div>
            <div id="tooltips" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Tooltips</h1>
                <p>
                    Sometimes you might want to hide text away until someone hovers over something. Using tooltips you can make just that!
                </p>
                <div class="code-block">
                  <p class="pl-2">All you need to do is make something like this: {Text to display|Text that will be revealed on hover!}. This will create a normal tooltip.</p>
                </div>
                <p class="pl-4 is-italic">This becomes...</p>
                <div class="code-block">
                  <div class="text-processing">All you need to do is make something like this: {Text to display|Text that will be revealed on hover!}. This will create a normal tooltip.</div>
                </div>
                <hr class="m-3">
                <p>
                  You can also customize the color of the displayed text.
                </p>
                <div class="code-block">
                  <p class="pl-2">By writing 'color:' before the displayed text, that text will be that color. For example, {green:This text will be green.|And the text is green!}</p>
                </div>
                <p class="pl-4 is-italic">This becomes...</p>
                <div class="code-block">
                  <div class="text-processing">By writing 'color:' before the displayed text, that text will be that color. For example, {green:This text will be green.|And the text is green!}</div>
                </div>
                <p class="pt-3"> Here are all the different color options: </p>
                <div class="code-block text-processing">
                    **Color Options**
                    normal: 🠖 This is {normal:normal|How hidden!} text.
                    blue: 🠖 This is {blue:blue|How it looks by default!} text.
                    green: 🠖 This is {green:green|Quite green!} text.
                    cyan: 🠖 This is {cyan:cyan|Nice color!} text.
                    red: 🠖 This is {red:red|Uh oh!} text.
                    yellow: 🠖 This is {yellow:yellow|Yellow!} text.
                    blue_underline: 🠖 This is {blue_underline:blue underlined|Woah!} text.
                    green_underline: 🠖 This is {green_underline:green underlined|Look at all these options!} text.
                    cyan_underline: 🠖 This is {cyan_underline:cyan underlined|More subtle!} text.
                    red_underline: 🠖 This is {red_underline:red underlined|Oooooo!} text.
                    yellow_underline: 🠖 This is {yellow_underline:yellow underlined|Look! It's yellow again!} text.
                </div>
            </div>
            <div id="lists" class="mt-4 isHideable">
                <div>
                  <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Bullet Lists</h1>
                  <p>
                    There are times when it's best to organize information using a bulleted list. Here's how you can do that.
                  </p>
                  <div class="code-block">
                      <p class="pl-2">
                      The effect depends on whether the target is living or undead.
                      </p>
                      <p class="pl-2">
                          * Living Creature: The spell deals negative damage equal to 1d4 plus your spellcasting modifier. The target attempts a basic Fortitude save, but is also enfeebled 1 for 1 round on a critical failure.
                      </p>
                      <p class="pl-2">
                          * Undead Creature: The target is flat-footed for 1 round on a failed Fortitude save. On a critical failure, the target is also fleeing for 1 round unless it succeeds at a Will save.
                      </p>
                  </div>
                  <p class="pl-4 is-italic">Becomes...</p>
                  <div class="code-block text-processing">
                      The effect depends on whether the target is living or undead.
                      * Living Creature: The spell deals negative damage equal to 1d4 plus your spellcasting modifier. The target attempts a basic Fortitude save, but is also enfeebled 1 for 1 round on a critical failure.
                      * Undead Creature: The target is flat-footed for 1 round on a failed Fortitude save. On a critical failure, the target is also fleeing for 1 round unless it succeeds at a Will save.
                  </div>
                </div>
                <div class="mt-4">
                  <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Non-Bullet Lists</h1>
                  <p>
                    There are times when you want the stylistic benefits of a bulleted list but without the bullet.
                  </p>
                  <div class="code-block">
                      <p class="pl-2">
                      The effect depends on whether the target is living or undead.
                      </p>
                      <p class="pl-2">
                          ~ Living Creature: The spell deals negative damage equal to 1d4 plus your spellcasting modifier. The target attempts a basic Fortitude save, but is also enfeebled 1 for 1 round on a critical failure.
                      </p>
                      <p class="pl-2">
                          ~ Undead Creature: The target is flat-footed for 1 round on a failed Fortitude save. On a critical failure, the target is also fleeing for 1 round unless it succeeds at a Will save.
                      </p>
                  </div>
                  <p class="pl-4 is-italic">Becomes...</p>
                  <div class="code-block text-processing">
                      The effect depends on whether the target is living or undead.
                      ~ Living Creature: The spell deals negative damage equal to 1d4 plus your spellcasting modifier. The target attempts a basic Fortitude save, but is also enfeebled 1 for 1 round on a critical failure.
                      ~ Undead Creature: The target is flat-footed for 1 round on a failed Fortitude save. On a critical failure, the target is also fleeing for 1 round unless it succeeds at a Will save.
                  </div>
                </div>
            </div>
        </div>
        <div id="code_fields" class="tile is-child is-paddingless">    
            <div class="isHideable">
                <h1 class="main-title is-size-3 is-family-code has-text-centered is-marginless mb-2">Code Fields</h1>
            </div>
            <div id="code_basics" class="isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Basics</h1>
                <p>
                    With code fields, WSC uses a series of code statements to implement changes, generate selectors, and adjust stats. There are three different kinds of code statements: builder statements <span class="is-italic">(statements that are only executed in the character builder)</span>, sheet statements <span class="is-italic">(statements that are only executed on the character sheet)</span>, and universal statements <span class="is-italic">(statements that are executed on both the character builder and sheet)</span>. Each of these code statements is separated from each other by the newline character.
                </p>
                <div class="info-block">
                  <p><i class="fas fa-info-circle"></i>
                    Most of this code field documentation will be a series of examples on how to use each code statement. If something doesn't make sense or you need more clarification, feel free to ask in the homebrew-help channel on our <a class="has-text-info" href="https://discord.gg/kxCpa6G" target="_blank">Discord server</a>.
                  </p>
                </div>
                <p>
                    Below is an example of what multiple individual statements would look like. Each statement is on its own line and thus distinct.
                </p>
                <div class="code-block">
                    GIVE-PROF-IN=LIGHT_ARMOR:M
                    <br/>
                    GIVE-SKILL-FEAT=3
                </div>
            </div>
            <div id="code_builder_statements" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Builder Statements</h1>
                <p>
                  Builder statements are code statements that are only executed in the character builder. They tend to generate content when they're executed.
                </p>
            </div>
            <div id="code_sheet_statements" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Sheet Statements</h1>
                <p>
                    Sheet statements are code statements that are only executed on the character sheet. They are frequently used to adjust character stats.
                </p>
            </div>
            <div id="code_stat_adjustments" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Stat Adjustments</h1>
                <p>
                  These sheet statements use variable names to adjust certain statistics within the character sheet. The <a href="/wsc_docs/#code_variables">Variables</a> page has the full table of all the variables with their names and descriptions.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        INCREASE-SKILL_SURVIVAL=5-STATUS
                    </div>
                    <p class="pl-3">
                        - Gives the character a +5 status bonus to Survival. 
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        INCREASE-PERCEPTION=2
                    </div>
                    <p class="pl-3">
                        - Gives the character a +2 bonus to Perception. 
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DECREASE-SAVE_REFLEX=1-CIRCUM
                    </div>
                    <p class="pl-3">
                        - Gives the character a -1 circumstance penalty to Reflex saving throws. 
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DECREASE-SCORE_DEX=2
                    </div>
                    <p class="pl-3">
                        - Gives the character a -2 penalty to their Dexterity ability score. 
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        CONDITIONAL-INCREASE-SKILL_STEALTH=2~circumstance bonus to Sneak checks while in the rain
                    </div>
                    <p class="pl-3">
                        - Adds a conditional to Stealth, stating '+2 circumstance bonus to Sneak checks while in the rain'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        CONDITIONAL-DECREASE-PERCEPTION=2~status penalty to checks for initiative
                    </div>
                    <p class="pl-3">
                        - Adds a conditional to Perception, stating '-2 status penalty to checks for initiative'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        CONDITIONAL-SAVE_FORT=When you roll a success, you get a critical success instead.
                    </div>
                    <p class="pl-3">
                        - Adds a conditional to Fortitude, stating 'When you roll a success, you get a critical success instead.'
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        OVERRIDE-PERCEPTION=2-MODIFIER
                    </div>
                    <p class="pl-3 pb-2">
                        <strong class="has-text-danger">Warning: </strong><em>Using this statement might result is strange, unpredictable results if used improperly. Like everything here, feel free to mess around with it and see how it affects a character, but it many change things in seemly unexpected ways if you don't know what you're doing!</em>
                    </p>
                    <p class="pl-3">
                        - Replaces the character's modifier from Perception (which is Wisdom) with 2 only if 2 is higher than the character's current Wisdom modifier. For stats that are penalties (like <span class="code">ARMOR_CHECK_PENALTY</span>), treat the override number as negative. For example, <span class="code">OVERRIDE-ARMOR_CHECK_PENALTY=1-BASE</span> would be a -1 penalty, which would be greater than many other armor penalties that are -2 or -3.
                    </p>
                </div>
            </div>
            <div id="code_if_else" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Conditionals (If - Else)</h1>
                <p>
                    You can make certain code statements only execute if a certain condition is first met.
                </p>
                <p>
                  The format is as follows:
                </p>
                <p>
                  <span class="code">IF (Conditional) {Statement}</span>
                </p>
                <p>
                  Optionally, you can include an ELSE for a given statement to execute if the conditional was NOT met:
                </p>
                <p>
                  <span class="code">IF (Conditional) {Statement} ELSE {Other-Statement}</span>
                </p>
                <p class="pt-4">
                  Below is a list of the types of conditionals that exist with a list of the types of boolean operators that can be applied to each.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-FEAT==Specialty Crafting) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the 'Specialty Crafting' feat, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-CLASS-ABILITY==Cloistered Cleric) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the 'Cloistered Cleric' class ability, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-HERITAGE==Treedweller) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the 'Treedweller' heritage, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-VISION==Low-Light Vision) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the 'Low-Light Vision' vision type, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-LEVEL>=13) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character is level 13 or greater, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        - Any number between 0 and 20 for the level.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==', '!=', '>=', or '<='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-PROF==Arcana:T) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character is trained in Arcana, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==', '!=', '>=', or '<='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-FOCUS-POINTS==0) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has zero Focus Points, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==', '!=', '>=', or '<='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-PROF>=Stealth:T) {Statement} ELSE {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character is trained or better in Stealth, the first statement will execute (which will give the character a swim speed of 15 feet). If the character is not trained in Stealth, the second statement will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==', '!=', '>=', or '<='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-ENABLED-SOURCE==Advanced Player's Guide) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the source book 'Advanced Player's Guide' enabled, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        - The name of a homebrew bundle will also work as a source.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (IS-VARIABLE(SCORE_INT)>=22) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the variable 'SCORE_INT' is greater than or equal to 22, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        - Currently only ALL UPPERCASE VARIABLES work with this conditional.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==' or '!=' (and '>=' or '<=' if the variable .GET_VALUE is a whole number)
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (HAS-FEAT==Goblin Song && HAS-FOCUS-POINTS==0) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character has the 'Goblin Song' feat and has zero Focus Points, the statement inside the braces will execute.
                    </p>
                    <p class="pl-3">
                        Boolean Operators: '==', '!=', '>=', or '<='
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF-SHEET (Conditional) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character meets the condition, the statement inside the braces will execute (like normal). Although, this if statement will only be tested in the character sheet (not in the character builder or anywhere else). In all other non-sheet contexts, the condition is essentially treats as true - executing the statement.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (IS-UNARMORED) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character is currently not wearing armor.
                    </p>
                    <p class="pl-3">
                        Can only contain sheet statements.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        IF (IS-TOGGLED==Rage) {Statement}
                    </div>
                    <p class="pl-3">
                        - If the character sheet currently has the 'Rage' toggleable active.
                    </p>
                    <p class="pl-3">
                        Can only contain sheet statements.
                    </p>
                </div>
            </div>
            <div id="code_boosts" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Boosts</h1>
                <p>
                    Use the following code statements to give a character ability boosts. Ability boosts are special in that a character cannot select the same ability score as any other ABILITY-BOOST statement in the same code field.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ABILITY-BOOST-SINGLE=ALL
                    </div>
                    <p class="pl-3">
                        - Generates one ability boost selector, all six ability scores are options.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ABILITY-BOOST-SINGLE=INT,WIS,CHA
                    </div>
                    <p class="pl-3">
                        - Generates one ability boost selector, only options are Intelligence, Wisdom, and Charisma.
                    </p>
                    <p class="pl-3">
                        - Note: Separate abilities list by only a single ","
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ABILITY-BOOST-MULTIPLE=3
                    </div>
                    <p class="pl-3">
                        - Generates three ability boost selectors, all six ability scores are options.
                    </p>
                    <p class="pl-3">
                        - Can generate up to six ability boost selectors, any more would be unnecessary.
                    </p>
                </div>
                <hr class="m-2">
                <div class="pt-2 pb-2">
                    <p class="pl-3">
                        <strong>Warrior Background Example:</strong>
                    </p>
                    <p>
                        The warrior background gives the character an ability boost of either Strength or Constitution and then another ability boost of any ability score. But, since these two boosts are both given from the same source, the character cannot select the same ability score for both.
                    </p>
                    <p>
                        You can implement something like this using the following code:
                    </p>
                    <div class="code-block">
                        GIVE-ABILITY-BOOST-SINGLE=STR,CON
                        <br/>
                        GIVE-ABILITY-BOOST-SINGLE=ALL
                    </div>
                </div>
                <div class="pt-4 pb-2">
                    <p class="pl-3">
                        <strong>4-Free-Boosts Example:</strong>
                    </p>
                    <p>
                        Generally every five levels a character is given four ability boosts. Because these four boosts are from the same source, they cannot select the same ability score multiple times.
                    </p>
                    <p>
                        You can implement something like this using the following code:
                    </p>
                    <div class="code-block">
                        GIVE-ABILITY-BOOST-MULTIPLE=4
                    </div>
                </div>
            </div>
            <div id="code_feats" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Feats</h1>
                <p>
                    Use the following code statements to give a character feats.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FEAT-NAME=Ancestral Paragon
                    </div>
                    <p class="pl-3">
                        - Gives the character the 'Ancestral Paragon' feat.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-GENERAL-FEAT=3
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only general feats with the level 3 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-SKILL-FEAT=15
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only skill feats with the level 15 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ANCESTRY-FEAT=11
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only that character's ancestry feats with the level 11 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-CLASS-FEAT=1
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only that character's class feats with the level 1 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ARCHETYPE-FEAT=2
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, functions just like a class feat except it only lists options for picking a dedication or selecting an archetype feat.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-SKILL-FEAT=Half_Level
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only skill feats with a level equal to half the character's level (rounded down) or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-CLASS-FEAT=1[metamagic]
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only that character's class feats with the metamagic trait and are level 1 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-CLASS-FEAT=15[abjuration,arcane,metamagic]
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only that character's class feats with the abjuration, arcane, and metamagic traits and are level 15 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FEAT=3[wizard,metamagic]
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing all feats with the wizard and metamagic traits and are level 3 or lower.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FEAT-NAME=Animal Companion[ranger]
                    </div>
                    <p class="pl-3">
                        - Gives the character the 'Animal Companion' feat that has the ranger trait.
                    </p>
                    <p class="pl-3">
                        - Can list more required traits by using a comma as shown above.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FEAT-FROM=Choose a Tradition:feat 1,feat 2,feat 3,etc
                    </div>
                    <p class="pl-3">
                        - Generates a feat selector, listing only feats with the names: 'feat 1', 'feat 2', 'feat 3', and 'etc'. The feat selector will say 'Choose a Tradition' for the feat selection.
                    </p>
                </div>
            </div>
            <div id="code_languages" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Languages</h1>
                <p>
                    Use the following code statements to give a character a langauge.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-LANG-NAME=Elven
                    </div>
                    <p class="pl-3">
                        - Gives the character the 'Elven' language.
                    </p>
                    <p class="pl-3">
                        - Use an underscore in the place of spaces for names, if relevant.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-LANG
                    </div>
                    <p class="pl-3">
                        - Generates a language selector, listing all languages as options.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-LANG-BONUS-ONLY
                    </div>
                    <p class="pl-3">
                        - Generates a language selector, listing the ancestry's bonus languages as options.
                    </p>
                </div>
            </div>
            <div id="code_proficiencies" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Proficiencies</h1>
                <p>
                  These builder statements are used to adjust the character's proficiencies. Most of these statements use the variable name of the appropriate proficiency to adjust, to find these names see the <a href="/wsc_docs/#code_variables">Variables</a> page. On it there is a full table with all of the variables used by both the builder and character sheet, you can use the variables with the type <span class="code">PROFICIENCY</span>.
                </p>
                <p>
                  You can also add the proficiency of a specific lore, weapon, or armor by name. To do this, write <span class="code">TYPE~Name</span> in place of the proficiency variable name.
                </p>
                <div class="pl-3 py-2">
                    <p class="">
                        <strong>By Name:</strong>
                    </p>
                    <p class="pl-2">
                        LORE~Name
                    </p>
                    <p class="pl-2">
                        WEAPON~Name
                    </p>
                    <p class="pl-2">
                        ARMOR~Name
                    </p>
                </div>
                <hr class="m-3">
                <p>
                    Use the following code statements to give a character a proficiency.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-PROF-INCREASE-IN=SKILL_ARCANA
                    </div>
                    <p class="pl-3">
                        - Increases the character's proficiency in Arcana by one tier.
                    </p>
                    <p class="pl-3">
                        (Untrained -> Trained, Trained -> Expert, etc)
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-PROF-IN=SKILL_DIPLOMACY:T
                    </div>
                    <p class="pl-3">
                        - Sets the character's base proficiency in Diplomacy to trained.
                    </p>
                    <p class="pl-3">
                        - Note: Any proficiency increases will stack on top of the base proficiency.
                    </p>
                    <p class="pl-3">
                        (U = Untrained, T = Trained, E = Expert, M = Master, L = Legendary)
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-PROF-IN=LIGHT_ARMOR:M
                    </div>
                    <p class="pl-3">
                        - Sets the character's base proficiency in Light Armor to master.
                    </p>
                    <p class="pl-3">
                        - Note: Any proficiency increases will stack on top of the base proficiency.
                    </p>
                    <p class="pl-3">
                        (U = Untrained, T = Trained, E = Expert, M = Master, L = Legendary)
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-PROF-IN=WEAPON~Sickle:E
                    </div>
                    <p class="pl-3">
                        - Sets the character's base proficiency with the Sickle to expert.
                    </p>
                    <p class="pl-3">
                        - Note: Any proficiency increases will stack on top of the base proficiency.
                    </p>
                    <p class="pl-3">
                        (U = Untrained, T = Trained, E = Expert, M = Master, L = Legendary)
                    </p>
                </div>
                <hr class="m-3">
                <p class="is-italic">
                  The old proficiency codenames from pre-1.6 update have been deprecated and should no longer be used. However, a large amount of content within Wanderer's Guide still uses those old codenames in their code. These codenames will still work, however, they won't be supported forever.
                </p>
            </div>
            <div id="code_skills" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Skills</h1>
                <p>
                    Use the following code statements to give a character a proficiency in a skill of their choice.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-SKILL-INCREASE
                    </div>
                    <p class="pl-3">
                        - Generates a skill selector, listing all skills and lores in the character's skill list.
                    </p>
                    <p class="pl-3">
                        - The selected skill has its proficiency increased by one tier.
                    </p>
                    <p class="pl-3">
                        - Minimum level of 7 to increase a skill to master and 15 to increase to legendary.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-SKILL=T
                    </div>
                    <p class="pl-3">
                        - Generates a skill selector, listing all skills and lores in the character's skill list.
                    </p>
                    <p class="pl-3">
                        - The selected skill has its base proficiency set to trained.
                    </p>
                    <p class="pl-3">
                        - Note: Any proficiency increases will stack on top of the base proficiency.
                    </p>
                    <p class="pl-3">
                        (U = Untrained, T = Trained, E = Expert, M = Master, L = Legendary)
                    </p>
                </div>
                <div class="py-2">
                <div class="code-block">
                        GIVE-SKILL=T[Arcana,Deception,Crafting]
                    </div>
                    <p class="pl-3">
                        - Generates a skill selector, listing only the Arcana, Deception, and Crafting skills as options.
                    </p>
                    <p class="pl-3">
                        - Note: Separate skill names by only a single ","
                    </p>
                    <p class="pl-3">
                        - The selected skill has its base proficiency set to trained.
                    </p>
                    <p class="pl-3">
                        - Note: Any proficiency increases will stack on top of the base proficiency.
                    </p>
                    <p class="pl-3">
                        (U = Untrained, T = Trained, E = Expert, M = Master, L = Legendary)
                    </p>
                </div>
                <div class="mt-4"></div>
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Lore</h1>
                    <p>
                        Use the following code statements to give a character a lore skill.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-LORE=Sailing
                        </div>
                        <p class="pl-3">
                            - Gives the character 'Sailing' Lore, by adding it to their skill list, and makes them trained in that Lore skill.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-LORE-CHOOSE
                        </div>
                        <p class="pl-3">
                            - Generates an input field. Text input into the field will be saved and give the character a Lore skill with that name. They will become trained in that Lore skill automatically.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-LORE-CHOOSE-INCREASING
                        </div>
                        <p class="pl-3">
                            - Generates an input field. Text input into the field will be saved and give the character a Lore skill with that name. They will become trained in that Lore skill automatically, which scales as the character's level increases. At 3rd level they become expert, at 7th they become master, and at 15th they become legendary.
                        </p>
                    </div>
                </div>
            </div>
            <div id="code_spells" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Spells</h1>
                <p>
                    Use the following code statements to give a character spells and spellcasting. With many of the statements it may require a spellcasting source, this can be any name you'd like but it should be consistant - it will be the unique identifier for that instance of spellcasting. If you're creating homebrew for a class, the spellcasting source should likely be the name of the class.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        SET-SPELL-CASTING-TYPE=Bard:SPONTANEOUS-REPERTOIRE
                    </div>
                    <p class="pl-3">
                        - Sets the Bard spellcasting source to use a repertoire - making them a spontaneous caster.
                    </p>
                    <p class="pl-3">
                        - Options are: Prepared-List, Prepared-Book, Prepared-Familiar, Spontaneous-Repertoire, or Flexible-Collection.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-SPELL-TRADITION=Wizard:ARCANE
                    </div>
                    <p class="pl-3">
                        - Sets the Wizard spellcasting source to use the Arcane tradition spell list.
                    </p>
                    <p class="pl-3">
                        - Options are: Arcane, Divine, Occult, and Primal.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-SPELL-KEY-ABILITY=Druid:WIS
                    </div>
                    <p class="pl-3">
                        - Sets the Druid spellcasting source to use Wisdom as their key spellcasting ability.
                    </p>
                    <p class="pl-3">
                        - Options are: STR, DEX, CON, INT, WIS, and CHA.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-SPELL-SLOTS=Bard:THREE-QUARTERS
                    </div>
                    <p class="pl-3">
                        - Sets the Bard spellcasting source to have three-quarters spellcasting slots (that being what most spellcasters have: 5 cantrips and 2 to 3 spell slots per spell level).
                    </p>
                    <p class="pl-3">
                        - Options are: Three-Quarters, Full, Reduced, Partial, and Single-Set.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-SPELL-SLOT=Bard:10
                    </div>
                    <p class="pl-3">
                        - Gives the character a 10th level spell slot for the Bard spellcasting source.
                    </p>
                    <p class="pl-3">
                        - Options are: 0 - 10.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        ADD-SPELL-TO-LIST=Witch:Spirit Link:1
                    </div>
                    <p class="pl-3">
                        - Adds the Spirit Link spell at 1st-level to the spell list/repertoire for the Witch spellcasting source.
                    </p>
                </div>
                <hr class="m-2">
                <h1 class="small-title is-size-4 is-marginless mt-2 mb-1 pl-3">Focus Spells</h1>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FOCUS-SPELL=Shadowdancer:Dance of Darkness
                    </div>
                    <p class="pl-3">
                        - Gives the character Dance of Darkness as a focus spell using the Shadowdancer spellcasting source.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-FOCUS-POINT
                    </div>
                    <p class="pl-3">
                        - Increases the number of Focus Points in the character's focus pool.
                    </p>
                </div>
                <hr class="m-2">
                <h1 class="small-title is-size-4 is-marginless mt-2 mb-1 pl-3">Innate Spells</h1>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-INNATE-SPELL-NAME=Meld into Stone:3:DIVINE:1
                    </div>
                    <p class="pl-3">
                        - Gives the character Meld into Stone as an innate divine spell, cast at 3rd level, and can only be cast once per day.
                    </p>
                    <p class="pl-3">
                        - Options for tradition is: Arcane, Divine, Occult, and Primal.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-INNATE-SPELL-NAME=Daze:0:ARCANE:0
                    </div>
                    <p class="pl-3">
                        - Gives the character Daze as an innate arcane cantrip, can be cast any number of times per day.
                    </p>
                    <p class="pl-3">
                        - Options for tradition is: Arcane, Divine, Occult, and Primal.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-INNATE-SPELL=5:DIVINE:2
                    </div>
                    <p class="pl-3">
                        - Generates a selector, listing only 5th level spells within the Divine tradition spell list. The chosen spell can be cast twice per day.
                    </p>
                    <p class="pl-3">
                        - Options for tradition is: Arcane, Divine, Occult, and Primal.
                    </p>
                </div>
            </div>
            <div id="code_resist_and_weak" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Resistances and Weaknesses</h1>
                <p>
                    Use the following code statements to give a character a resistance or weakness.
                </p>
                <p>
                    For the value either put a number, "Half_Level", or "Level".
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-RESISTANCE=Negative:Half_Level
                    </div>
                    <p class="pl-3">
                        - Gives the character a resistance to negative damage equal to half their level.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-WEAKNESS=Cold:2
                    </div>
                    <p class="pl-3">
                        - Gives the character a weakness of 2 to cold damage.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-RESISTANCE=All Physical:Half_Level+2
                    </div>
                    <p class="pl-3">
                        - Gives the character a resistance equal to half their level + 2 against all physical damage.
                    </p>
                </div>
            </div>
            <div id="code_specializations" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Specializations</h1>
                <p>
                    Use the following code statements to give a character a specialization.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-WEAPON-SPECIALIZATION
                    </div>
                    <p class="pl-3">
                        - Gives the character weapon specialization.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-GREATER-WEAPON-SPECIALIZATION
                    </div>
                    <p class="pl-3">
                        - Gives the character greater weapon specialization.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-ARMOR-SPECIALIZATION=Light_Armor
                    </div>
                    <p class="pl-3">
                        - Gives the character armor specialization in all light armor.
                    </p>
                    <p class="pl-3">
                        - Options are any of the defenses proficiency options (see Proficiencies) and can give by armor name, trait, prof, or group (Ex: <span class="code">GIVE-ARMOR-SPECIALIZATION=PROF~E</span>).
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-WEAPON-CRITICAL-SPECIALIZATION=Simple_Weapons
                    </div>
                    <p class="pl-3">
                        - Gives the character critical specialization in all simple weapons.
                    </p>
                    <p class="pl-3">
                        - Options are any of the attacks proficiency options (see Proficiencies) and can give by weapon name, trait, prof, or group.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-WEAPON-CRITICAL-SPECIALIZATION=TRAIT~Dwarf
                    </div>
                    <p class="pl-3">
                        - Gives the character critical specialization in all weapons with the 'Dwarf - Item' trait.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-WEAPON-CRITICAL-SPECIALIZATION=WEAPON~Scimitar
                    </div>
                    <p class="pl-3">
                        - Gives the character critical specialization with the weapon of the name 'Scimitar'.
                    </p>
                </div>
            </div>
            <div id="code_universal_statements" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Universal Statements</h1>
                <p>
                    Universal statements are code statements that are executed on both the character builder and sheet.
                </p>
            </div>
            <div id="code_notes_field" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Notes Field</h1>
                <p>
                    Sometimes a feat or class ability might need an area where the user can write some notes specific to that feature. In such a case, use the following code statement to generate a notes field in the character builder or sheet for that feature.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-NOTES-FIELD=Use this area to keep information about your diety.
                    </div>
                    <p class="pl-3">
                        - Generates a notes field in the character sheet with the given placeholder text.
                    </p>
                </div>
            </div>
            <div id="code_add_text" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Add Text</h1>
                <p>
                    Occasionally a class feature or feat may need an extra sentence or two tacked on at the end if the character meets a certain condition. You can use the following statement to display text, usually displaying it below the description of something.
                </p>
                <p>
                    This statement is usually used within a conditional, allowing certain text to be displayed if a character is at a certain level or has a certain class feature, for example.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        ADD-TEXT=Any text you'd like to display!
                    </div>
                    <p class="pl-3">
                        - The displayed text will be parsed like a description field.
                    </p>
                </div>
            </div>
            <div id="code_builder_miscellaneous" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Miscellaneous</h1>

                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Class Features</h1>
                    <p>
                        Use the following code statement to give a character a class feature or class feature option.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CLASS-FEATURE-NAME=Sneak Attack
                        </div>
                        <p class="pl-3">
                            - Gives the character the class feature with the name "Sneak Attack".
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CLASS-FEATURE-NAME=Polymath
                        </div>
                        <p class="pl-3">
                            - You can use the same statement and list a class feature option instead, like the Polymath muse. Gives the character the class feature option with the name "Polymath".
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CLASS-FEATURE-NAME=Muses[NO-CODE]
                        </div>
                        <p class="pl-3">
                            - Gives the character a class feature with selection options. Including <span class="code">[NO-CODE]</span> at the end will make the class feature (and any selected feature options) not execute any code from within them.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Character Traits</h1>
                    <p>
                        Use the following code statement to add a trait to a character.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CHAR-TRAIT-NAME=Fey
                        </div>
                        <p class="pl-3">
                            - Adds the Fey trait to the character.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CHAR-TRAIT
                        </div>
                        <p class="pl-3">
                            - Generates a character trait selector, listing all ancestry traits as options.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-CHAR-TRAIT-COMMON
                        </div>
                        <p class="pl-3">
                            - Generates a character trait selector, listing all common ancestry traits as options.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div id="code_domains" class="mt-4 isHideable">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Domains</h1>
                    <p>
                        Use the following code statements to give or advance a character's domain.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-DOMAIN=Cleric
                        </div>
                        <p class="pl-3">
                            - Generates a domain selector, using 'Cleric' as the spellcasting source.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-DOMAIN-ADVANCEMENT=Cleric
                        </div>
                        <p class="pl-3">
                            - Generates a domain advancement selector, listing all the characters's current domains and using 'Cleric' as the spellcasting source.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Physical Features</h1>
                    <p>
                        Use the following code statement to give a character a physical feature. Physical feature is the term Wanderer's Guide uses to indicate and categorize extra features ancestries often give characters that are innate to the ancestry.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-PHYSICAL-FEATURE-NAME=Blunt Snout
                        </div>
                        <p class="pl-3">
                            - Gives the character a physical feature with the name "Blunt Snout".
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Senses</h1>
                    <p>
                        Use the following code statement to give a character a sense.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-SENSE-NAME=Darkvision
                        </div>
                        <p class="pl-3">
                            - Gives the character darkvision.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Other Speeds</h1>
                    <p>
                        Use the following code statement to give a character other types of speeds.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-SPEED=Swim:15
                        </div>
                        <p class="pl-3">
                            - Gives the character a swim speed of 15 feet.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-SPEED=Climb:LAND_SPEED
                        </div>
                        <p class="pl-3">
                            - Gives the character a climb speed equal to their land speed.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Heritage Effects</h1>
                    <p>
                        Occationally a feat may say that you gain the effects of a heritage. Use the following code statements to give a character the effects of a heritage.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-HERITAGE-EFFECTS-ANCESTRY=Elf
                        </div>
                        <p class="pl-3">
                            - Generates a heritage selector, listing all heritages for the 'Elf' ancestry as options.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-HERITAGE-EFFECTS-NAME=Ancient Elf
                        </div>
                        <p class="pl-3">
                            - Gives the character the effects of the 'Ancient Elf' heritage.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">SCFS'</h1>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-SCFS=Druidic Order:GIVE-FOCUS-SPELL
                        </div>
                        <p class="pl-3">
                            - Generates a selector listing all Druidic Orders. When an option is selected, the first WSC statement starting with 'GIVE-FOCUS-SPELL' from that order will be executed.
                        </p>
                    </div>
                </div>
                <hr class="m-2">
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Other</h1>
                    <div class="py-2">
                        <div class="code-block">
                            CLEAR-DATA-FROM-CODE-BLOCK
                        </div>
                        <p class="pl-3">
                            - Clears any stored data that has a source originating from this code block. Warning: Will clear memory of previous selected options for selectors.
                        </p>
                    </div>
                </div>

            </div>

            <div id="code_misc_feats" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Misc. Feat</h1>
                <p>
                    These universal statements have to do with feats and their management.
                </p>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Hide Feats - DEPRECATED</h1>
                    <p class="is-italic">
                      This statement is no longer being used. Use <a href="/wsc_docs/#code_removal_statements">Removal Statements</a> instead.
                    </p>
                    <div class="py-2">
                        <div class="code-block">
                            HIDE-FEAT-NAME=Drain Bonded Item
                        </div>
                        <p class="pl-3">
                            - Hides all feats with the name 'Drain Bonded Item'. Feats with that name are essentially treated as though they don't exist.
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Override Feats</h1>
                    <div class="py-2">
                        <div class="code-block">
                            OVERRIDE-FEAT-LEVEL=Magical Trickster:2
                        </div>
                        <p class="pl-3">
                            - Makes all feats with the name 'Magical Trickster' have their level set to 2nd instead of what levels they were before.
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Conceal Feats</h1>
                    <div class="py-2">
                        <div class="code-block">
                            SHEET-CONCEAL-FEAT-NAME=Cannot Breathe Air
                        </div>
                        <p class="pl-3">
                            - Makes all feats with the name 'Cannot Breathe Air' not show up on the Feats tab on the character sheet.
                        </p>
                    </div>
                </div>
            </div>

            <div id="code_variables" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Variables</h1>
                <p>
                    In both the character builder and sheet there are a set of predefined variables that you can make use of. You can also defined your own custom variables and assign value to them! <span class="is-italic">(The variable system is still in development with the plan to eventually phase out <a href="/wsc_docs/#code_stat_adjustments">Stat Adjustments</a> and combine everything into just Variables.)</span>
                </p>
                <p class="is-size-5 is-bold has-text-centered">PREDEFINED VARIABLES</p>
                <div class="code-block text-processing">
                  Variable Name|Variable Type|Details
                  :--|:-:|:--
                  **Ability Scores**||
                  SCORE_STR|ABILITY_SCORE|Strength ability score.
                  SCORE_DEX|ABILITY_SCORE|Dexterity ability score.
                  SCORE_CON|ABILITY_SCORE|Constitution ability score.
                  SCORE_INT|ABILITY_SCORE|Intelligence ability score.
                  SCORE_WIS|ABILITY_SCORE|Wisdom ability score.
                  SCORE_CHA|ABILITY_SCORE|Charisma ability score.
                  **Saving Throws**||
                  SAVE_FORT|PROFICIENCY|Fortitude saving throw. Ability score: SCORE_CON.
                  SAVE_REFLEX|PROFICIENCY|Reflex saving throw. Ability score: SCORE_DEX.
                  SAVE_WILL|PROFICIENCY|Will saving throw. Ability score: SCORE_WIS.
                  **Skills**||
                  SKILL_ACROBATICS|PROFICIENCY|Acrobatics skill. Ability score: SCORE_DEX.
                  SKILL_ARCANA|PROFICIENCY|Arcana skill. Ability score: SCORE_INT.
                  SKILL_ATHLETICS|PROFICIENCY|Athletics skill. Ability score: SCORE_STR.
                  SKILL_CRAFTING|PROFICIENCY|Crafting skill. Ability score: SCORE_INT.
                  SKILL_DECEPTION|PROFICIENCY|Deception skill. Ability score: SCORE_CHA.
                  SKILL_DIPLOMACY|PROFICIENCY|Diplomacy skill. Ability score: SCORE_CHA.
                  SKILL_INTIMIDATION|PROFICIENCY|Intimidation skill. Ability score: SCORE_CHA.
                  SKILL_MEDICINE|PROFICIENCY|Medicine skill. Ability score: SCORE_WIS.
                  SKILL_NATURE|PROFICIENCY|Nature skill. Ability score: SCORE_WIS.
                  SKILL_OCCULTISM|PROFICIENCY|Occultism skill. Ability score: SCORE_INT.
                  SKILL_PERFORMANCE|PROFICIENCY|Performance skill. Ability score: SCORE_CHA.
                  SKILL_RELIGION|PROFICIENCY|Religion skill. Ability score: SCORE_WIS.
                  SKILL_SOCIETY|PROFICIENCY|Society skill. Ability score: SCORE_INT.
                  SKILL_STEALTH|PROFICIENCY|Stealth skill. Ability score: SCORE_DEX.
                  SKILL_SURVIVAL|PROFICIENCY|Survival skill. Ability score: SCORE_WIS.
                  SKILL_THIEVERY|PROFICIENCY|Thievery skill. Ability score: SCORE_DEX.
                  SKILL_XXX_LORE|PROFICIENCY|Lore skill, replace XXX with the lore name. Ability score: SCORE_INT.
                  **Perception**||
                  PERCEPTION|PROFICIENCY|Perception. Ability score: SCORE_WIS.
                  **Class DC**||
                  CLASS_DC|PROFICIENCY|Class DC. Ability score: Varies.
                  **Spell Attacks**||
                  ARCANE_SPELL_ATTACK|PROFICIENCY|Arcane spell attack. Ability score: Varies.
                  DIVINE_SPELL_ATTACK|PROFICIENCY|Divine spell attack. Ability score: Varies.
                  OCCULT_SPELL_ATTACK|PROFICIENCY|Occult spell attack. Ability score: Varies.
                  PRIMAL_SPELL_ATTACK|PROFICIENCY|Primal spell attack. Ability score: Varies.
                  **Spell DCs**||
                  ARCANE_SPELL_DC|PROFICIENCY|Arcane spell DC. Ability score: Varies.
                  DIVINE_SPELL_DC|PROFICIENCY|Divine spell DC. Ability score: Varies.
                  OCCULT_SPELL_DC|PROFICIENCY|Occult spell DC. Ability score: Varies.
                  PRIMAL_SPELL_DC|PROFICIENCY|Primal spell DC. Ability score: Varies.
                  **Armor**||
                  LIGHT_ARMOR|PROFICIENCY|Light armor. Ability score: SCORE_DEX.
                  MEDIUM_ARMOR|PROFICIENCY|Medium armor. Ability score: SCORE_DEX.
                  HEAVY_ARMOR|PROFICIENCY|Heavy armor. Ability score: SCORE_DEX.
                  UNARMORED_DEFENSE|PROFICIENCY|Unarmored defense. Ability score: SCORE_DEX.
                  **Weapons**||
                  SIMPLE_WEAPONS|PROFICIENCY|Simple weapons. Ability score: Varies.
                  MARTIAL_WEAPONS|PROFICIENCY|Martial weapons. Ability score: Varies.
                  ADVANCED_WEAPONS|PROFICIENCY|Advanced weapons. Ability score: Varies.
                  UNARMED_ATTACKS|PROFICIENCY|Unarmed attacks. Ability score: Varies.
                  **Level**||
                  LEVEL|INTEGER|Character's current level.
                  **Health**||
                  MAX_HEALTH|INTEGER|Max health, not including MAX_HEALTH_BONUS_PER_LEVEL.
                  MAX_HEALTH_BONUS_PER_LEVEL|INTEGER|Added max HP at each level.
                  HEALTH|INTEGER|Changing this will simply update the current HP once.
                  TEMP_HEALTH|INTEGER|Changing this will simply update the current temp HP once.
                  **AC**||
                  AC|INTEGER|Used to add bonuses or penalties to AC.
                  ARMOR_CHECK_PENALTY|INTEGER|Used to adjust the armor check penalty.
                  ARMOR_SPEED_PENALTY|INTEGER|Used to adjust the armor speed penalty.
                  DEX_CAP|INTEGER|Adjusting this at all will override any existing Dex Cap.
                  **Speed**||
                  SPEED|INTEGER|Used to adjust land Speed.
                  SPEED_XXX|INTEGER|Used to adjust given Speed, replace XXX with the speed type.
                  **Limits**||
                  BULK_LIMIT|INTEGER|Used to adjust Bulk limit.
                  INVEST_LIMIT|INTEGER|Used to adjust Investiture limit.
                  **Global Attacks**||
                  ATTACKS|INTEGER|Used to adjust attack bonus to all attacks.
                  ATTACKS_DMG_DICE|INTEGER|Used to adjust damage dice to all attacks.
                  ATTACKS_DMG_BONUS|INTEGER|Used to adjust damage bonus to all attacks.
                  **Global Melee Attacks**||
                  MELEE_ATTACKS|INTEGER|Used to adjust attack bonus to all melee attacks.
                  MELEE_ATTACKS_DMG_DICE|INTEGER|Used to adjust damage dice to all melee attacks.
                  MELEE_ATTACKS_DMG_BONUS|INTEGER|Used to adjust damage bonus to all melee attacks.
                  AGILE_MELEE_ATTACKS_DMG_BONUS|INTEGER|Used to adjust damage bonus to all agile melee attacks.
                  NON_AGILE_MELEE_ATTACKS_DMG_BONUS|INTEGER|Used to adjust damage bonus to all non-agile melee attacks.
                  **Global Ranged Attacks**||
                  RANGED_ATTACKS|INTEGER|Used to adjust attack bonus to all ranged attacks.
                  RANGED_ATTACKS_DMG_DICE|INTEGER|Used to adjust damage dice to all ranged attacks.
                  RANGED_ATTACKS_DMG_BONUS|INTEGER|Used to adjust damage bonus to all ranged attacks.
                </div>

                <hr class="m-3">

                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3 pt-3">Custom Variables</h1>
                <p>
                  If you're doing something particularly advanced, you might want to create your own variables. When making your own variables, you need to make sure that your variable name is unique and that you define your variable before you attempt to set it to anything.
                </p>
                <p>
                  When you want to use a variable, you can just write the name and surround it in braces (like so, <span class="code">{Variable_Name}</span>). The variable will then be replaced by its value at runtime. Variables can be used in both description fields <span class="is-italic">and</span> code fields. And in code fields, the variable is replaced with its value before each statement is executed. This means that you could use variables to dynamically change a WSC statement from anywhere. Variables can also be chained within other variables, where the most internal variable is replaced first.
                </p>
                <p class=" is-bold pt-3">
                  You can use the DEFINE-VARIABLE statement to create or initialize a variable.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        DEFINE-VARIABLE=MyVariable:INTEGER
                    </div>
                    <p class="pl-3">
                        - A new variable will be defined by the name 'MyVariable'. It is an integer, meaning it can only be assigned to equal a whole number.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFINE-VARIABLE=Animal_Friend_Name:STRING
                    </div>
                    <p class="pl-3">
                        - A new variable will be defined by the name 'Animal_Friend_Name'. It is a string, meaning it can only be assigned to equal a line of text.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFINE-VARIABLE=Investigation:PROFICIENCY(SCORE_INT)
                    </div>
                    <p class="pl-3">
                        - A new variable will be defined by the name 'Investigation'. It is a proficiency, meaning it can only be assigned to equal a proficiency rank (U, T, E, M, or L). In the parentheses is the name of an ABILITY_SCORE variable (in this case Intelligence aka SCORE_INT).
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFINE-VARIABLE=SCORE_AGILITY:ABILITY_SCORE
                    </div>
                    <p class="pl-3">
                        - A new variable will be defined by the name 'SCORE_AGILITY'. It is an ability score, meaning it can only be assigned to equal a whole number.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFINE-VARIABLE=FeatNames:LIST
                    </div>
                    <p class="pl-3">
                        - A new variable will be defined by the name 'FeatNames'. It is a list, meaning it can only be assigned to equal an array or list of values (following JSON formatting).
                    </p>
                </div>

                <hr class="m-3">

                <p class="is-bold pt-3">
                  You can use the SET-VARIABLE statement to set a defined variable or one of its set methods to a value.
                </p>
                <p class="is-italic">
                  Not specifying a method when setting a variable is the same as using .SET_VALUE
                </p>
                <p class="is-bold is-size-6 has-text-centered">SET METHODS BY VARIABLE TYPE</p>
                <div class="code-block text-processing">
                  Method Name|Details|
                  :--|:--|:--
                  **INTEGER**||
                  SET_VALUE|Sets the variable to the given input.|
                  **STRING**||
                  SET_VALUE|Sets the variable to the given input.|
                  **PROFICIENCY**||
                  SET_ABILITY|Sets the ability score to the ABILITY_SCORE variable with the given name.|
                  SET_VALUE|Sets the proficiency rank to the given input.|
                  **ABILITY_SCORE**||
                  SET_SCORE|Sets the variable to the given input.|
                  SET_VALUE|Sets the variable to the given input.|
                  **LIST**||
                  SET_INDEX_XXX|Sets the XXXth element in the list to the given input, starting at 0th.|
                  SET_INDEX_NEXT|Sets the next element in the list to the given input.|
                  SET_VALUE|Sets the variable to the given input, it must be an array following JSON formatting.|
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=MyVariable.SET_VALUE:67
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'MyVariable' will be assigned to the value of '67'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=Animal_Friend_Name:Vienna
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'Animal_Friend_Name' will be assigned to the value of 'Vienna'. This is equivalent to 'Animal_Friend_Name.SET_VALUE:Vienna'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=Investigation.SET_ABILITY:SCORE_WIS
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'Investigation' will have its ability score assigned to a new ABILITY_SCORE variable by the name of 'SCORE_WIS' (aka Wisdom).
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=SCORE_AGILITY.SET_SCORE:14
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'SCORE_AGILITY' will be assigned to the value of '14'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=FeatNames.SET_VALUE:["Lie to Me","Diehard","Risky Surgery","Juggle"]
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'FeatNames' will be assigned to the array ["Lie to Me","Diehard","Risky Surgery","Juggle"].
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=FeatNames.SET_INDEX_2:Very Sneaky
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'FeatNames' will have its 3rd element (index 2) be replaced with the value 'Very Sneaky'.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        SET-VARIABLE=FeatNames.SET_INDEX_NEXT:Whirling Throw
                    </div>
                    <p class="pl-3">
                        - The variable by the name of 'FeatNames' will have a new element added to the end of it with the value 'Whirling Throw'.
                    </p>
                </div>

                <hr class="m-3">

                <p class="is-bold pt-3">
                  Once you have defined and set some variables, you will want to be able to use them. Here's how:
                </p>
                <p>
                  Variables can be written in description fields and code fields by writing the variable name then surrounding it in braces, like so: {VariableName}. You can also include one of the variable's get methods to get other variable information. <span class="is-italic">Not specifying a method when writing a variable is the same as using the .GET_VALUE method</span>
                </p>
                <p class="is-bold is-size-6 has-text-centered">GET METHODS BY VARIABLE TYPE</p>
                <div class="code-block text-processing">
                  Method Name|Details|
                  :--|:--|:--
                  **INTEGER**||
                  GET_VALUE|Gets the value of the variable.|
                  **STRING**||
                  GET_VALUE|Gets the value of the variable.|
                  **PROFICIENCY**||
                  GET_TOTAL|Gets the total bonus. Currently doesn't add character level.|
                  GET_BONUS_RANK|Gets the proficiency bonus. Currently doesn't add character level.|
                  GET_BONUS_ABILITY|Gets the ability score bonus.|
                  GET_ABILITY|Gets the associated ABILITY_SCORE variable.|
                  GET_VALUE|Gets the value of the variable.|
                  **ABILITY_SCORE**||
                  GET_SCORE|Gets the value of the variable.|
                  GET_MOD|Gets the calculated modifier of the score.|
                  GET_VALUE|Gets the value of the variable.|
                  **LIST**||
                  GET_INDEX_XXX|Gets the value of the XXXth element, starting at 0th.|
                  GET_LENGTH|Gets the length of the list.|
                  GET_VALUE|Gets the value of the variable.|
                </div>
                <div class="py-2">
                    <p class="is-bold">
                      Example.
                    </p>
                    <p class="pl-3">
                      Here's my list of feats: {FeatNames}. The second element is {FeatNames.GET_INDEX_1}. I have a +{SCORE_AGILITY.GET_MOD} in my Agility ability score. My pet is named {Animal_Friend_Name}, I love her very much.
                    </p>
                    <p class="pl-2 is-italic">
                      Based on the previous examples, this becomes...
                    </p>
                    <p class="pl-3">
                      Here's my list of feats: Lie to Me,Diehard,Very Sneaky,Juggle,Whirling Throw. The second element is Diehard. I have a +2 in my Agility ability score. My pet is named Vienna, I love her very much.
                    </p>
                </div>
            </div>
            
            <div id="code_conditions" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Conditions</h1>
                <p>
                    These sheet statements add a condition to the character.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-CONDITION=Clumsy:1
                    </div>
                    <p class="pl-3">
                        - The character will be given the 'Clumsy' condition with the value 1.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        GIVE-CONDITION=Flat-Footed
                    </div>
                    <p class="pl-3">
                        - The character will be given the 'Flat-Footed' condition.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        REMOVE-CONDITION=Flat-Footed
                    </div>
                    <p class="pl-3">
                        - The character will lose the 'Flat-Footed' condition, if they have it.
                    </p>
                </div>
            </div>

            <div id="code_item_defaults" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Item Defaults</h1>
                <p>
                    All of these special sheet statements only work when they're written in the code field of an item.
                </p>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-WEAPON-RUNE=+1 Weapon Potency
                    </div>
                    <p class="pl-3">
                        - Adds a '+1 Weapon Potency' rune to the item, if the item is a weapon.
                    </p>
                    <p class="pl-3 is-italic">
                        - Executed only once when the item is first added to the character's inventory.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ARMOR-RUNE=Fortification
                    </div>
                    <p class="pl-3">
                        - Adds a 'Fortification' rune to the item, if the item is armor and has an open property rune slot.
                    </p>
                    <p class="pl-3 is-italic">
                        - Executed only once when the item is first added to the character's inventory.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ADD-ITEM-TO-BAG=Bedroll
                    </div>
                    <p class="pl-3">
                        - Adds the item 'Bedroll' to the contents of a storage item, if the item is a storage item.
                    </p>
                    <p class="pl-3 is-italic">
                        - Executed only once when the item is first added to the character's inventory.
                    </p>
                </div>
                <hr class="m-2">
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ADJUST-RANGE=+30
                    </div>
                    <p class="pl-3">
                        - If the item is a ranged weapon, adjusts the weapon's range by the value.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ADJUST-RELOAD=-1
                    </div>
                    <p class="pl-3">
                        - If the item is a ranged weapon, adjusts the weapon's range by the value.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ADD-TRAIT=Deadly d8
                    </div>
                    <p class="pl-3">
                        - Can be placed on a runestone or any attachment item. If the rune or item is attached to an item, the attached item will gain the given trait.
                    </p>
                </div>
                <hr class="m-2">
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-HIT-DAMAGE=+5d6+6 fire
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, makes the weapon deal an additional 5d6+5 fire damage.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-CRIT-DAMAGE=1d12 cold
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, makes the weapon deal an additional 1d12 cold damage only on a critical hit. As per the rules, damage added on a crit isn't doubled.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-HIT-OTHER=The target is flat-footed until next turn.
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, adds an additional effect to the weapon's damage.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-CRIT-OTHER=The target is flat-footed forever.
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, adds an additional effect to the weapon's damage only on a critical hit.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-HIT-CONDITIONAL=If the target is an elf, they are flat-footed until next turn.
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, adds a conditional additional effect to the weapon's damage. Similar to DEFAULT-ON-HIT-OTHER, however, the additional effect will be displayed as a conditional rather than a constant effect.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
                <div class="py-2">
                    <div class="code-block">
                        DEFAULT-ON-CRIT-CONDITIONAL=If the target is an elf, they are flat-footed forever.
                    </div>
                    <p class="pl-3">
                        - If the item is a weapon, adds a conditional additional effect to the weapon's damage only on a critical hit. Similar to DEFAULT-ON-CRIT-OTHER, however, the additional effect will be displayed as a conditional rather than a constant effect.
                    </p>
                    <p class="pl-3 is-italic">
                        - Can also be placed on a runestone or any attachment item. If the rune or item is attached to an item, the code will also execute onto the attached item.
                    </p>
                </div>
            </div>

            <div id="code_sheet_miscellaneous" class="mt-4 isHideable">
                <h1 class="small-title is-size-3 is-marginless mb-1 pl-3">Miscellaneous</h1>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Apex Ability Score</h1>
                    <div class="py-2">
                        <div class="code-block">
                            SET-APEX-ABILITY-SCORE=DEX
                        </div>
                        <p class="pl-3">
                            - Increases the given ability score to 18 or increases it by +2 if the ability score is already 18 or higher.
                        </p>
                        <p class="pl-3">
                            - Options are: STR, DEX, CON, INT, WIS, and CHA.
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Character Size</h1>
                    <div class="py-2">
                        <div class="code-block">
                            SET-SIZE=SMALL
                        </div>
                        <p class="pl-3">
                            - Overrides the character's size (determined by their ancestry) with the new size.
                        </p>
                        <p class="pl-3">
                            - Options are: TINY, SMALL, MEDIUM, LARGE, HUGE, and GARGANTUAN.
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Familiarity</h1>
                    <div class="py-2">
                        <div class="code-block">
                            GIVE-WEAPON-FAMILIARITY=Goblin
                        </div>
                        <p class="pl-3">
                            - For the purpose of determining your weapon proficiency, all martial weapons with the 'Goblin - Item' trait are simple weapons and all advanced weapons with the 'Goblin - Item' trait are martial weapons.
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Multiple Attack Penalty</h1>
                    <div class="py-2">
                        <div class="code-block">
                            SET-MAP=Tier_3
                        </div>
                        <p class="pl-3">
                            - Options are: Tier_1, Tier_2, Tier_3, and Tier_4.
                        </p>
                        <p class="pl-3">
                            - Tier_1 = (-5/-10 or -4/-8 for agile weapons)
                        </p>
                        <p class="pl-3">
                            - Tier_2 = (-4/-8 or -3/-6 for agile weapons)
                        </p>
                        <p class="pl-3">
                            - Tier_3 = (-3/-6 or -2/-4 for agile weapons)
                        </p>
                        <p class="pl-3">
                            - Tier_4 = (-2/-4 or -1/-2 for agile weapons)
                        </p>
                    </div>
                </div>
                <div class="mt-4">
                    <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Other</h1>
                    <div class="py-2">
                        <div class="code-block">
                            DISPLAY-COMPANION-TAB
                        </div>
                        <p class="pl-3">
                            - Makes the Companions subtab, under the Details tab, visible.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            SET-FINESSE-MELEE-USE-DEX-DAMAGE
                        </div>
                        <p class="pl-3">
                            - Makes melee weapons with the finesse trait use Dexterity for weapon damage.
                        </p>
                    </div>
                    <div class="py-2">
                        <div class="code-block">
                            SET-ADD-LEVEL-TO-UNTRAINED-WEAPONS
                        </div>
                        <p class="pl-3">
                            - Adds the character level to the proficiency to hit with all untrained weapons.
                        </p>
                    </div>
                </div>
            </div>

            <div id="code_removal_statements" class="mt-4 isHideable">
                <h1 class="small-title is-size-4 is-marginless mb-1 pl-3">Removal Statements</h1>
                <p class="pb-2">
                    Removal statements are code statements that can only be processed in the "Runs on Load" code block. Therefore, they are executed before nearly everything else.
                </p>
                <p class="pb-2">
                    These code statements are used to remove any content from other sources with the given name, treating that content essentially as though it doesn't exist.
                </p>
                <p class="pb-3 is-italic is-bold">
                    Removal statements only removes content from OTHER books/homebrew bundles. Content from the current bundle is untouched. This is primarily in order to allow overrides and erratas of existing content. 
                </p>
                <p class="pb-3">
                  <strong class="has-text-danger">Warning: </strong>Removing content without creating content with the same name to replace it can lead to breaking existing systems.
                </p>

                <div class="py-2">
                    <div class="code-block">
                        REMOVAL-FEAT-NAME=Drain Bonded Item
                    </div>
                    <p class="pl-3">
                        - Removes all feats with the name 'Drain Bonded Item' from other sources.
                    </p>
                </div>

                <div class="py-2">
                    <div class="code-block">
                        REMOVAL-ITEM-NAME=Backpack
                    </div>
                    <p class="pl-3">
                        - Removes all items with the name 'Backpack from other sources.
                    </p>
                </div>

                <div class="py-2">
                    <div class="code-block">
                        REMOVAL-SPELL-NAME=Fireball
                    </div>
                    <p class="pl-3">
                        - Removes all spells with the name 'Fireball' from other sources.
                    </p>
                </div>

                <div class="py-2">
                    <div class="code-block">
                        REMOVAL-CLASS-FEATURE-NAME=Elemental
                    </div>
                    <p class="pl-3">
                        - Removes all class features with the name 'Elemental' from other sources.
                    </p>
                </div>

            </div>

        </div>
    </div>
    <div class="tile is-parent is-2">
        <div class="tile is-child"></div>
    </div>
</div>